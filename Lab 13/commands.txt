Odpalenie RabbitMQ:
docker run -d --name rabbitmq -p 15672:15672 -p 5672:5672 rabbitmq:3-management

Odpalenie NotificationService2:
docker run -d -p 92:80 --name notificationservice mcr.microsoft.com/dotnet/core/sdk:2.2 tail -f /dev/null
docker cp "ścieżka\do\projektu\LibrarySystem\Library.NotificationService2\." notificationservice:/app
docker exec -it notificationservice /bin/bash
cd /app
dotnet restore
dotnet publish -c Release -o out
cd out
dotnet Library.NotificationService2.dll
docker commit notificationservice notificationserviceimg
docker run -d -p 92:80 --name notificationservice notificationserviceimg

Stworzenie sieci i dodanie do niej kontenerów:
docker network create -d bridge my-bridge-network
docker network connect --alias rabbitmq my-bridge-network rabbitmq
docker network connect --alias notificationservice my-bridge-network notificationservice
docker inspect my-bridge-network
docker inspect rabbitmq
docker inspect notificationservice

Odpalenie WebApi:
cd "ścieżka\do\dockerfile"
docker build -t wallys02/librarywebapi .
docker run -d -p 91:91 --name librarywebapi wallys02/librarywebapi
docker network connect --alias librarywebapi my-bridge-network librarywebapi

Odpalenie Web:
cd "ścieżka\do\dockerfile"
docker build -t wallys02/libraryweb .
docker run -d -p 91:91 --name libraryweb wallys02/libraryweb
docker network connect --alias libraryweb my-bridge-network libraryweb